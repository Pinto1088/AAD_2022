vendor_name = ModelSim
source_file = 1, /home/carlos/Documents/GitHub/AAD_2022/Hadamard/arithmetic.vhd
source_file = 1, /home/carlos/Documents/GitHub/AAD_2022/Hadamard/simpleLogic.vhd
source_file = 1, /home/carlos/Documents/GitHub/AAD_2022/Hadamard/Encoder.vhd
source_file = 1, /home/carlos/Documents/GitHub/AAD_2022/Hadamard/Decoder.vhd
source_file = 1, /home/carlos/Documents/GitHub/AAD_2022/Hadamard/popCounter_8bitParallelOpt.vhd
source_file = 1, /home/carlos/Documents/GitHub/AAD_2022/Hadamard/Waveform.vwf
source_file = 1, /home/carlos/Documents/GitHub/AAD_2022/Hadamard/Waveform1.vwf
source_file = 1, /home/carlos/intelFPGA_lite/20.1/quartus/libraries/vhdl/ieee/prmtvs_b.vhd
source_file = 1, /home/carlos/intelFPGA_lite/20.1/quartus/libraries/vhdl/ieee/prmtvs_p.vhd
source_file = 1, /home/carlos/intelFPGA_lite/20.1/quartus/libraries/vhdl/ieee/timing_b.vhd
source_file = 1, /home/carlos/intelFPGA_lite/20.1/quartus/libraries/vhdl/ieee/timing_p.vhd
source_file = 1, /home/carlos/Documents/GitHub/AAD_2022/Hadamard/db/Hadamard.cbx.xml
design_name = hard_block
design_name = Decoder
instance = comp, \msOut[0]~output\, msOut[0]~output, Decoder, 1
instance = comp, \msOut[1]~output\, msOut[1]~output, Decoder, 1
instance = comp, \msOut[2]~output\, msOut[2]~output, Decoder, 1
instance = comp, \msOut[3]~output\, msOut[3]~output, Decoder, 1
instance = comp, \valid~output\, valid~output, Decoder, 1
instance = comp, \yIn[0]~input\, yIn[0]~input, Decoder, 1
instance = comp, \yIn[3]~input\, yIn[3]~input, Decoder, 1
instance = comp, \yIn[1]~input\, yIn[1]~input, Decoder, 1
instance = comp, \yIn[2]~input\, yIn[2]~input, Decoder, 1
instance = comp, \yIn[5]~input\, yIn[5]~input, Decoder, 1
instance = comp, \yIn[7]~input\, yIn[7]~input, Decoder, 1
instance = comp, \yIn[6]~input\, yIn[6]~input, Decoder, 1
instance = comp, \yIn[4]~input\, yIn[4]~input, Decoder, 1
instance = comp, \s_valid~2\, s_valid~2, Decoder, 1
instance = comp, \s_valid~1\, s_valid~1, Decoder, 1
instance = comp, \m1_one~0\, m1_one~0, Decoder, 1
instance = comp, \s_valid~0\, s_valid~0, Decoder, 1
instance = comp, \m_slash[1]~1\, m_slash[1]~1, Decoder, 1
instance = comp, \m0_one~0\, m0_one~0, Decoder, 1
instance = comp, \m_slash[0]~0\, m_slash[0]~0, Decoder, 1
instance = comp, \popCounter8|hA01|and20|y\, popCounter8|hA01|and20|y, Decoder, 1
instance = comp, \m2_one~0\, m2_one~0, Decoder, 1
instance = comp, \m_slash[2]\, m_slash[2], Decoder, 1
instance = comp, \partial_decoder|xOut[1]\, partial_decoder|xOut[1], Decoder, 1
instance = comp, \popCounter8|fA10|fA0|and20|y\, popCounter8|fA10|fA0|and20|y, Decoder, 1
instance = comp, \popCounter8|fA20|hA0|and20|y\, popCounter8|fA20|hA0|and20|y, Decoder, 1
instance = comp, \popCounter8|fA10|fA0|xor21|y~0\, popCounter8|fA10|fA0|xor21|y~0, Decoder, 1
instance = comp, \popCounter8|fA10|fA0|xor21|y~2\, popCounter8|fA10|fA0|xor21|y~2, Decoder, 1
instance = comp, \popCounter8|fA10|fA0|xor21|y~1\, popCounter8|fA10|fA0|xor21|y~1, Decoder, 1
instance = comp, \popCounter8|fA10|fA0|xor21|y~3\, popCounter8|fA10|fA0|xor21|y~3, Decoder, 1
instance = comp, \popCounter8|hA02|and20|y\, popCounter8|hA02|and20|y, Decoder, 1
instance = comp, \popCounter8|fA11|fA0|xor20|y\, popCounter8|fA11|fA0|xor20|y, Decoder, 1
instance = comp, \s_valid~4\, s_valid~4, Decoder, 1
instance = comp, \popCounter8|fA20|fA10|or20|y~0\, popCounter8|fA20|fA10|or20|y~0, Decoder, 1
instance = comp, \s_valid~3\, s_valid~3, Decoder, 1
instance = comp, \popCounter8|fA11|fA0|and20|y\, popCounter8|fA11|fA0|and20|y, Decoder, 1
instance = comp, \msOut~0\, msOut~0, Decoder, 1
